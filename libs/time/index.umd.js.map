{"version":3,"file":"index.umd.js","sources":["../../node_modules/date-format-lite/index.js","../../src/time/index.js"],"sourcesContent":["\n\n\n/*\n* @version  17.7.0\n* @author   Lauri Rooden <lauri@rooden.ee>\n* @license  MIT License\n*/\n\n\n\n!function(Date, proto) {\n\tvar maskRe = /(\"|')((?:\\\\?.)*?)\\1|([YMDZ])\\3\\3\\3?|([YMDHhmsWSZ])(\\4?)|[uUASwoQ]/g\n\t, dateRe = /(\\d+)[-.\\/](\\d+)[-.\\/](\\d+)/\n\t, timeRe = /(\\d+):(\\d+)(?::(\\d+))?(\\.\\d+)?(?:\\s*(?:(a)|(p))\\.?m\\.?)?(\\s*(?:Z|GMT|UTC)?(?:([-+]\\d\\d):?(\\d\\d)?)?)?/i\n\t, unescapeRe = /\\\\(.)/g\n\t, map = { D:\"Date\", h:\"Hours\", m:\"Minutes\", s:\"Seconds\", S:\"Milliseconds\" }\n\t, units = {\n\t\tseconds: 1000,\n\t\tsec: 1000,\n\t\tminutes: 60000,\n\t\tmin: 60000,\n\t\thours: 3600000,\n\t\thour: 3600000,\n\t\tdays: 86400000,\n\t\tday: 86400000,\n\t\tweeks: 604800000,\n\t\tweek: 604800000\n\t}\n\n\t//, isoDateRe = /(\\d{4})[-.\\/]W(\\d\\d?)[-.\\/](\\d)/\n\n\n\t// ISO 8601 specifies numeric representations of date and time.\n\t//\n\t// The international standard date notation is\n\t// YYYY-MM-DD\n\t//\n\t// The international standard notation for the time of day is\n\t// hh:mm:ss\n\t//\n\t// Time zone\n\t//\n\t// The strings +hh:mm, +hhmm, or +hh (ahead of UTC)\n\t// -hh:mm, -hhmm, or -hh (time zones west of the zero meridian, which are behind UTC)\n\t//\n\t// 12:00Z = 13:00+01:00 = 0700-0500\n\n\tDate[proto].date = Date[proto].format = function(mask, _zone) {\n\t\tmask = Date.masks[mask] || mask || Date.masks[\"default\"]\n\n\t\tvar undef, zonediff\n\t\t, date = this\n\t\t, origin = +date\n\t\t, get = \"get\" + (mask.slice(0, 4) == \"UTC:\" ? (mask = mask.slice(4), \"UTC\") : \"\")\n\t\t, zone = _zone == undef ? date._z : _zone\n\n\t\tif (zone != undef && get == \"get\") {\n\t\t\tget = \"getUTC\"\n\t\t\tdate.setTime( origin + (36e5 * zone) )\n\t\t\tzonediff = 60 * zone\n\t\t}\n\n\t\tmask = mask.replace(maskRe, function(match, quote, text, MD, single, pad) {\n\t\t\ttext = MD == \"Y\"  ? date[get + \"FullYear\"]()\n\t\t\t: single == \"Z\" || MD == \"Z\"   ? (\n\t\t\t\tquote = zonediff || get == \"get\" && -date.getTimezoneOffset() || 0,\n\t\t\t\tquote ? (\n\t\t\t\t\t(quote < 0 ? ((quote=-quote), \"-\") : \"+\") +\n\t\t\t\t\t(quote < 600 ? \"0\" : \"\") +\n\t\t\t\t\t(0|(quote/60)) +\n\t\t\t\t\t((quote%=60) || MD ? (pad || match == \"ZZZZ\" ? \"\" : \":\") + (quote > 9 ? quote : \"0\" + quote) : \"\")\n\t\t\t\t)\n\t\t\t\t: \"Z\"\n\t\t\t)\n\t\t\t: MD              ? Date.names[ date[get + (MD == \"M\" ? \"Month\" : \"Day\" ) ]() + ( match == \"DDD\" ? 24 : MD == \"D\" ? 31 : match == \"MMM\" ? 0 : 12 ) ]\n\t\t\t: single == \"Y\"   ? date[get + \"FullYear\"]() % 100\n\t\t\t: single == \"W\"   ? ( quote = new Date(origin + ((4 - (date[get + \"Day\"]()||7)) * 86400000))\n\t\t\t                    , Math.ceil(((quote.getTime() - quote[\"s\" + get.slice(1) + \"Month\"](0, 1)) / 86400000 + 1 ) / 7)\n\t\t\t\t\t    )\n\t\t\t: single == \"M\"   ? date[get + \"Month\"]() + 1\n\t\t\t: single == \"H\"   ? date[get + \"Hours\"]() % 12 || 12\n\t\t\t: single          ? date[get + map[single]]()\n\t\t\t: match == \"u\"    ? (date/1000)>>>0\n\t\t\t: match == \"U\"    ? origin\n\t\t\t: match == \"Q\"    ? ((date[get + \"Month\"]()/3)|0) + 1\n\t\t\t: match == \"A\"    ? Date[date[get + \"Hours\"]() > 11 ? \"pm\" : \"am\"]\n\t\t\t: match == \"w\"    ? date[get + \"Day\"]() || 7\n\t\t\t: match == \"o\"    ? new Date(origin + ((4 - (date[get + \"Day\"]()||7)) * 86400000))[get + \"FullYear\"]()\n\t\t\t: quote           ? text.replace(unescapeRe, \"$1\")\n\t\t\t: match\n\t\t\tif (match == \"SS\" && text < 100) {\n\t\t\t\ttext = \"0\" + text\n\t\t\t}\n\t\t\treturn pad && text < 10 && single != \"Z\" ? \"0\" + text : text\n\t\t})\n\t\tif (zonediff != undef) {\n\t\t\tdate.setTime(origin)\n\t\t}\n\t\treturn mask\n\t}\n\n\tDate[proto].tz = function(zone) {\n\t\tthis._z = zone\n\t\treturn this\n\t}\n\n\tDate[proto].add = function(amount, unit) {\n\t\tvar date = this\n\t\tamount |= 0\n\t\tif ((unit == \"month\" || unit == \"months\") || (unit == \"year\" || unit == \"years\") && (amount *= 12)) {\n\t\t\tdate.setUTCMonth(date.getUTCMonth() + amount)\n\t\t} else if (amount) {\n\t\t\tdate.setTime(date.getTime() + (amount * (units[unit] || 1)))\n\t\t}\n\t\treturn date\n\t}\n\n\tDate[proto].startOf = function(unit) {\n\t\tvar date = this\n\t\t, month = 0\n\t\tif (unit == \"year\" || unit == \"years\") {\n\t\t\tdate.setUTCMonth(0, 1)\n\t\t\tunit = \"day\"\n\t\t} else if (unit == \"month\" || unit == \"months\") {\n\t\t\tdate.setUTCDate(1)\n\t\t\tunit = \"day\"\n\t\t}\n\t\tdate.setTime(date - (date % (units[unit] || 1)))\n\t\treturn date\n\t}\n\n\tDate[proto].endOf = function(unit) {\n\t\treturn this.startOf(unit).add(1, unit).add(-1)\n\t}\n\n\tDate[proto].diff = function(from, unit) {\n\t\tvar diff = (this - from) / (units[unit] || 1)\n\t\treturn diff | 0\n\t}\n\n\tDate.am = \"AM\"\n\tDate.pm = \"PM\"\n\n\tDate.masks = {\n\t\t\"default\": \"DDD MMM DD YYYY hh:mm:ss\",\n\t\t\"iso\": \"UTC:YYYY-MM-DD'T'hh:mm:ss'Z'\"\n\t}\n\tDate.names = \"JanFebMarAprMayJunJulAugSepOctNovDecJanuaryFebruaryMarchAprilMayJuneJulyAugustSeptemberOctoberNovemberDecemberSunMonTueWedThuFriSatSundayMondayTuesdayWednesdayThursdayFridaySaturday\".match(/.[a-z]+/g)\n\n\t//*/\n\n\n\t/*\n\t * // In Chrome Date.parse(\"01.02.2001\") is Jan\n\t * num = +date || Date.parse(date) || \"\"+date;\n\t */\n\n\tString[proto].date = Number[proto].date = function(format, zoneOut, zoneIn) {\n\t\tvar undef, match, year, month\n\t\t, date = new Date()\n\t\t, num = +this || \"\" + this\n\n\t\tif (isNaN(num)) {\n\t\t\tif (match = num.match(dateRe)) {\n\t\t\t\t// Big endian date, starting with the year, eg. 2011-01-31\n\t\t\t\t// Middle endian date, starting with the month, eg. 01/31/2011\n\t\t\t\t// Little endian date, starting with the day, eg. 31.01.2011\n\t\t\t\tyear = match[1] > 99 ? 1 : 3\n\t\t\t\tmonth = Date.middleEndian ? 4 - year : 2\n\t\t\t\tdate.setFullYear(match[year], match[month] - 1, match[6 - month - year])\n\t\t\t}\n\n\t\t\t// Time\n\t\t\tmatch = num.match(timeRe) || [0, 0, 0]\n\t\t\tdate.setHours(\n\t\t\t\tmatch[6] && match[1] < 12 ? +match[1] + 12 :\n\t\t\t\tmatch[5] && match[1] == 12 ? 0 : match[1],\n\t\t\t\tmatch[2], match[3]|0, (1000 * match[4])|0\n\t\t\t)\n\n\t\t\t// Timezone\n\t\t\tif (match[7]) {\n\t\t\t\tzoneIn = (match[8]|0) + ((match[9]|0)/(match[8]<0?-60:60))\n\t\t\t}\n\t\t} else {\n\t\t\tdate.setTime(num < 4294967296 ? num * 1000 : num)\n\t\t}\n\n\t\tif (zoneIn != undef) {\n\t\t\tdate.setTime(date - (60 * zoneIn + date.getTimezoneOffset()) * 60000)\n\t\t}\n\n\t\treturn format ? date.format(format, zoneOut) : date\n\t}\n\n}(Date, \"prototype\")\n\n\n\n\n","import 'date-format-lite'\r\n\r\nconst DATE_TIME_FORMATTER = 'YYYY-MM-DD hh:mm:ss'\r\nconst DATE_FORMATTER = 'YYYY-MM-DD'\r\nconst TIME_FORMATTER = 'hh:mm:ss'\r\n\r\nexport default {\r\n  name: 'time',\r\n\r\n  /**\r\n   * 格式化时间\r\n   * @param {string} time 时间\r\n   * @param {string} formatter 格式\r\n   * @return {string}\r\n   */\r\n  format (time, formatter) {\r\n    return time ? time.date(formatter) : ''\r\n  },\r\n\r\n  /**\r\n   * 年-月-日 时:分:秒\r\n   * @param {string} time 时间\r\n   * @return {string}\r\n   */\r\n  getDateTime (time) {\r\n    return this.format(time, DATE_TIME_FORMATTER)\r\n  },\r\n\r\n  /**\r\n   * 年-月-日\r\n   * @param {string} time 时间\r\n   * @return {string}\r\n   */\r\n  getDate (time) {\r\n    return this.format(time, DATE_FORMATTER)\r\n  },\r\n\r\n  /**\r\n   * 时:分:秒\r\n   * @param {string} time 时间\r\n   * @return {string}\r\n   */\r\n  getTime (time) {\r\n    return this.format(time, TIME_FORMATTER)\r\n  },\r\n\r\n  /**\r\n   * 在 time 基础上加 unit 秒、分钟...\r\n   * @param {string} time 时间\r\n   * @param {string} num 数量\r\n   * @param {string} unit 单位（eg: seconds, minutes, hours, days, weeks, months, years）\r\n   */\r\n  add (time, num, unit) {\r\n    return this.format(time).add(num, unit)\r\n  }\r\n}\r\n"],"names":["Date","proto","maskRe","dateRe","timeRe","unescapeRe","map","D","h","m","s","S","units","seconds","sec","minutes","min","hours","hour","days","day","weeks","week","date","format","mask","_zone","masks","zonediff","this","origin","get","slice","zone","undef","_z","setTime","replace","match","quote","text","MD","single","pad","getTimezoneOffset","names","Math","ceil","getTime","tz","add","amount","unit","setUTCMonth","getUTCMonth","startOf","setUTCDate","endOf","diff","from","am","pm","default","iso","String","Number","zoneOut","zoneIn","year","month","num","isNaN","middleEndian","setFullYear","setHours","time","formatter"],"mappings":"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"}